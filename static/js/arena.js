// Generated by CoffeeScript 1.3.3
(function() {
  var API, M, do_ais, _, _ref;

  _ref = typeof exports !== "undefined" && exports !== null ? [exports._arena = {}, require('underscore'), (require('./mote'))._mote] : [window._arena = {}, window._, window._mote], API = _ref[0], _ = _ref[1], M = _ref[2];

  API.setup_random = function(n, random_mote) {
    var i, mote, _i, _results;
    _results = [];
    for (i = _i = 0; 0 <= n ? _i < n : _i > n; i = 0 <= n ? ++_i : --_i) {
      while (true) {
        if (!M.collide_with_view(mote = random_mote(), false)) {
          break;
        }
      }
      _results.push(mote);
    }
    return _results;
  };

  API.step = function(motes, ais, t) {
    do_ais(ais, motes);
    motes = _.filter(motes, function(mote) {
      if (mote.radius <= 0) {
        return false;
      }
      M.displace(mote, t);
      M.collide_with_view(mote);
      M.collide_mote(mote, motes);
      return true;
    });
    return motes;
  };

  do_ais = function(ais, motes) {
    return _.each(ais, function(ejects, strain) {
      if (ejects != null) {
        return _.each(ejects, function(angle, i) {
          if (angle != null) {
            return M.eject(i, strain, motes, angle);
          }
        });
      }
    });
  };

}).call(this);
